rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function uid() { return request.auth.uid; }

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.uid == uid();
      allow update, delete: if isSignedIn() && userId == uid();
    }

    match /opportunities/{oppId} {
      allow read: if true; // public browse
      allow create: if isSignedIn() && request.resource.data.orgId == uid();
      allow update, delete: if isSignedIn() && resource.data.orgId == uid();
    }

    match /applications/{appId} {
      allow read: if isSignedIn() && (
        resource.data.volunteerId == uid() ||
        get(/databases/$(database)/documents/opportunities/$(resource.data.oppId)).data.orgId == uid()
      );
      allow create: if isSignedIn() && request.resource.data.volunteerId == uid();
      allow update: if isSignedIn() && (
        resource.data.volunteerId == uid() ||
        get(/databases/$(database)/documents/opportunities/$(resource.data.oppId)).data.orgId == uid()
      );
      allow delete: if false;
    }

    match /pledges/{pledgeId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.volunteerId == uid();
      allow update: if isSignedIn() && (
        resource.data.volunteerId == uid() ||
        get(/databases/$(database)/documents/opportunities/$(resource.data.oppId)).data.orgId == uid()
      );
      allow delete: if false;
    }
  }
}
